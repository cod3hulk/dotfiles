
# focus window
alt - k : yabai -m window --focus north
alt - h : yabai -m window --focus west || yabai -m display --focus west
alt - l : yabai -m window --focus east || yabai -m display --focus east
alt - j : yabai -m window --focus south

alt + shift - h : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                  yabai -m window --warp west || yabai -m window --display west && \
                  yabai -m window --focus ${cur_window}
alt + shift - l : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                  yabai -m window --warp east || yabai -m window --display east && \
                  yabai -m window --focus ${cur_window}
alt + shift - k : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                  yabai -m window --warp north || yabai -m window --display north && \
                  yabai -m window --focus ${cur_window}
alt + shift - j : cur_window=$(yabai -m query --windows --window | jq '.id') && \
                  yabai -m window --warp south || yabai -m window --display south && \
                  yabai -m window --focus ${cur_window}

alt + shift - t : yabai -m window --toggle split

alt + shift - j : yabai -m window --focus stack.next || yabai -m window --focus stack.first
alt + shift - k : yabai -m window --focus stack.prev || yabai -m window --focus stack.last

alt - n : yabai -m window --focus next || yabai -m window --focus first
alt - p : yabai -m window --focus prev

# alt + shift - h : sh -c 'is_floating=$(yabai -m query --windows --window | jq -re ".\"is-floating\""); \
#                 cur_window=$(yabai -m query --windows --window | jq '.id'); \
#                   if [ "$is_floating" = "true" ]; then \
#                       yabai -m window --toggle float; \
#                       yabai -m window --display west; \
#                       yabai -m window --focus ${cur_window}; \
#                       yabai -m window --toggle float; \
#                       yabai -m window --grid 8:8:1:1:6:6; \
#                   else \
#                     yabai -m window --warp west || yabai -m window --display west && \
#                     yabai -m window --focus ${cur_window}; \
#                   fi'
#
# alt + shift - l : sh -c 'is_floating=$(yabai -m query --windows --window | jq -re ".\"is-floating\""); \
#                 cur_window=$(yabai -m query --windows --window | jq '.id'); \
#                   if [ "$is_floating" = "true" ]; then \
#                       yabai -m window --toggle float; \
#                       yabai -m window --display east; \
#                       yabai -m window --focus ${cur_window}; \
#                       yabai -m window --toggle float; \
#                       yabai -m window --grid 8:8:1:1:6:6; \
#                   else \
#                     yabai -m window --warp east || yabai -m window --display east && \
#                     yabai -m window --focus ${cur_window}; \
#                   fi'

# alt + shift - s : yabai -m space --layout stack
# alt + shift - t : yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "stack" else "bsp" end')


# make floating window fill screen
#shift + alt - f : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
# shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
alt + shift - n : yabai -m space --create && \
                  index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
                  yabai -m window --space "${index}" && \
                  yabai -m space --focus "${index}"
alt + shift - c : yabai -m space --create && \
                  index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
                  yabai -m space --focus "${index}"
alt + shift - x : yabai -m space --destroy 
# fast focus desktop
# cmd + alt - x : yabai -m space --focus recent
# cmd + alt - 1 : yabai -m space --focus 1

# send window to desktop and follow focus
shift + cmd - z : yabai -m window --space next; yabai -m space --focus next
# shift + cmd - 2 : yabai -m window --space  2; yabai -m space --focus 2

# focus monitor
#ctrl + alt - p  : yabai -m display --focus prev
#ctrl + alt - n  : yabai -m display --focus next
# ctrl + alt - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
# ctrl + cmd - c  : yabai -m window --display next; yabai -m display --focus next
# ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1

# move floating window
# shift + ctrl - a : yabai -m window --move rel:-20:0
# shift + ctrl - s : yabai -m window --move rel:0:20

# increase window size
# shift + alt - a : yabai -m window --resize left:-20:0
# shift + alt - w : yabai -m window --resize top:0:-20

# decrease window size
# shift + cmd - s : yabai -m window --resize bottom:0:-20
# shift + cmd - w : yabai -m window --resize top:0:20

# set insertion point in focused container
# ctrl + alt - h : yabai -m window --insert west

# toggle window zoom
# alt - d : yabai -m window --toggle zoom-parent
alt - f : yabai -m window --toggle zoom-fullscreen
# Float and center
alt + shift - f : yabai -m window --toggle float;\
          yabai -m window --grid 8:8:1:1:6:6
alt - m: yabai -m window --minimize && yabai -m window --focus recent
alt - w: yabai -m window --close

# resize
ctrl + cmd - h : yabai -m window west --resize right:-50:0 2> /dev/null || yabai -m window --resize right:-50:0
ctrl + cmd - j : yabai -m window north --resize bottom:0:50 2> /dev/null || yabai -m window --resize bottom:0:50
ctrl + cmd - k : yabai -m window south --resize top:0:-50 2> /dev/null || yabai -m window --resize top:0:-50
ctrl + cmd - l : yabai -m window east --resize left:50:0 2> /dev/null || yabai -m window --resize left:50:0
ctrl + cmd - 0 : yabai -m space --balance
ctrl + cmd - 3 : yabai -m window --ratio abs:0.3
ctrl + cmd - 7 : yabai -m window --ratio abs:0.7


# toggle window split type
 #alt - e : yabai -m window --toggle split

# float / unfloat window and center on screen
# alt - t : yabai -m window --toggle float;\
#           yabai -m window --grid 4:4:1:1:2:2

# toggle sticky(+float), topmost, picture-in-picture
#alt - p : yabai -m window --toggle sticky;\
          #yabai -m window --toggle topmost;\
          #yabai -m window --toggle pip
          #
# focus spaces
alt - 1 : yabai -m space --focus 1
alt + shift - 1 : yabai -m window --space 1
alt - 2 : yabai -m space --focus 2
alt + shift - 2 : yabai -m window --space 2
alt - 3 : yabai -m space --focus 3
alt + shift - 3 : yabai -m window --space 3
alt - 4 : yabai -m space --focus 4
alt + shift - 4 : yabai -m window --space 4
alt - 5 : yabai -m space --focus 5
alt + shift - 5 : yabai -m window --space 5

# open apps
hyper - b : open '/Applications/Google Chrome.app'
hyper - s : open '/Applications/Slack.app'
hyper - t : open '/Applications/kitty.app'
hyper - i : open '/Applications/IntelliJ IDEA.app'
hyper - f1 : open '/Applications/Spotify.app'
hyper - v : /Users/tomas.ave/Development/cod3hulk/nvim-anywhere/nvim-anywhere.sh

# hyper - f1 : \
#   /usr/bin/env osascript /Users/tave/.dotfiles/scripts/automations/Spotify/like.scpt
# Restart Yabai
shift + lctrl + alt - r : \
    /usr/bin/env osascript <<< \
        "display notification \"Restarting Yabai\" with title \"Yabai\""; \
    yabai --restart-service
